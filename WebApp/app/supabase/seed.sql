-- Device List
create table
  public.device_list (
    id bigint generated by default as identity primary key,
    device_id text not null,
    inserted_at timestamp with time zone not null default timezone ('utc'::text, now()),
    last_heard timestamp with time zone not null default timezone ('utc'::text, now()),
    device_name text not null,
    connected boolean not null,
    online boolean not null,
    last_ip_address text not null,
    constraint device_list_device_id unique (device_id),
    constraint device_list_device_name_key unique (device_name)
  ) tablespace pg_default;

alter table public.device_list
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."device_list"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Component List
create table
  public.component_list (
    id bigint generated by default as identity not null,
    component_name text not null,
    device_id bigint not null,
    display text not null,
    description text null,
    constraint component_list_pkey primary key (id),
    constraint component_list_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.component_list
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."component_list"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Option List
create table
  public.option_list (
    id bigint generated by default as identity not null,
    component_id bigint not null,
    name text not null,
    type text not null,
    constraint option_list_pkey primary key (id),
    constraint option_list_component_id_fkey foreign key (component_id) references component_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.option_list
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."option_list"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Option Number
create table
  public.option_number_list (
    id bigint generated by default as identity not null,
    option_id bigint not null,
    units text null,
    "default" integer not null,
    value integer null,
    constraint option_number_list_pkey primary key (id),
    constraint option_number_list_option_id_key unique (option_id),
    constraint option_number_list_option_id_fkey foreign key (option_id) references option_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.option_number_list
  enable row level security;

CREATE POLICY "Enable read access" ON "public"."option_number_list"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

CREATE POLICY "Enable update access" ON "public"."option_number_list"
AS PERMISSIVE FOR UPDATE
TO authenticated
USING (true)

-- Option Boolean
create table
  public.option_boolean_list (
    id bigint generated by default as identity not null,
    option_id bigint not null,
    "default" boolean not null,
    value boolean null,
    constraint option_boolean_list_pkey primary key (id),
    constraint option_boolean_list_option_id_key unique (option_id),
    constraint option_boolean_list_option_id_fkey foreign key (option_id) references option_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.option_boolean_list
  enable row level security;

CREATE POLICY "Enable read access" ON "public"."option_boolean_list"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

CREATE POLICY "Enable update access" ON "public"."option_boolean_list"
AS PERMISSIVE FOR UPDATE
TO authenticated
USING (true)

-- Unknown Message
create table
  public.unknown_message (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    created_at timestamp with time zone not null default now(),
    topic text not null,
    payload text not null,
    constraint unknown_message_pkey primary key (id),
    constraint unknown_message_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.unknown_message
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."unknown_message"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Float Switch Pin
create table
  public.floatswitch_pin (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    pin smallint not null,
    constraint floatswitch_pin_pkey primary key (id),
    constraint floatswitch_pin_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.floatswitch_pin
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."floatswitch_pin"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Float Switch Reliable
create table
  public.floatswitch_reliable_reports (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    inserted_at timestamp with time zone not null default now(),
    datetime timestamp with time zone null,
    reliable boolean not null,
    constraint floatswitch_reliable_reports_pkey primary key (id),
    constraint floatswitch_reliable_reports_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.floatswitch_reliable_reports
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."floatswitch_reliable_reports"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Float Switch Status
create table
  public.floatswitch_status_reports (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    inserted_at timestamp with time zone not null default now(),
    datetime timestamp with time zone null,
    status boolean not null,
    constraint floatswitch_status_reports_pkey primary key (id),
    constraint floatswitch_status_reports_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.floatswitch_status_reports
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."floatswitch_status_reports"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Log
create table
  public.log (
    id bigint generated by default as identity not null,
    inserted_at timestamp with time zone not null default now(),
    datetime timestamp with time zone null,
    severity text not null,
    message text not null,
    device_id bigint not null,
    constraint log_pkey primary key (id),
    constraint log_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.log
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."log"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Restart
create table
  public.restart (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    inserted_at timestamp with time zone not null default now(),
    datetime timestamp with time zone null,
    reason text not null,
    constraint restart_pkey primary key (id),
    constraint restart_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.restart
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."restart"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- State Requests
create table
  public.state_request (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    datetime timestamp with time zone not null,
    state text not null,
    success boolean not null,
    request_reason text null,
    failure_reason text null,
    constraint state_request_pkey primary key (id),
    constraint state_request_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.state_request
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."state_request"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Versions
create table
  public.versions (
    id bigint generated by default as identity not null,
    device_id bigint null,
    inserted_at timestamp with time zone not null default now(),
    version text not null,
    constraint versions_pkey primary key (id),
    constraint versions_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.versions
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."versions"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Wifi Quality Reports
create table
  public.wifi_quality_reports (
    id bigint generated by default as identity not null,
    device_id bigint null,
    inserted_at timestamp with time zone not null default now(),
    datetime timestamp with time zone null,
    quality real not null,
    constraint wifi_quality_reports_pkey primary key (id),
    constraint wifi_quality_reports_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.wifi_quality_reports
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."wifi_quality_reports"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Wifi Signal Reports
create table
  public.wifi_signal_reports (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    inserted_at timestamp with time zone not null default now(),
    datetime timestamp with time zone null,
    signal real not null,
    constraint wifi_signal_reports_pkey primary key (id),
    constraint wifi_signal_reports_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.wifi_signal_reports
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."wifi_signal_reports"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Ro System Enabled Reports
create table
  public.rosystem_enabled_reports (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    inserted_at timestamp with time zone not null default now(),
    datetime timestamp with time zone null,
    enabled boolean not null,
    constraint rosystem_enabled_reports_pkey primary key (id),
    constraint rosystem_enabled_reports_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.rosystem_enabled_reports
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."rosystem_enabled_reports"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Ro System Flushed Reports
create table
  public.rosystem_flushed_reports (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    inserted_at timestamp with time zone not null default now(),
    datetime timestamp with time zone null,
    flushed boolean not null,
    constraint rosystem_flushed_reports_pkey primary key (id),
    constraint rosystem_flushed_reports_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.rosystem_flushed_reports
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."rosystem_flushed_reports"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)

-- Barometer Pressure Reports
create table
  public.barometer_pressure_reports (
    id bigint generated by default as identity not null,
    device_id bigint not null,
    inserted_at timestamp with time zone not null default now(),
    datetime timestamp with time zone null,
    pressure integer not null,
    constraint barometer_pressure_reports_pkey primary key (id),
    constraint barometer_pressure_reports_device_id_fkey foreign key (device_id) references device_list (id) on delete cascade
  ) tablespace pg_default;

alter table public.barometer_pressure_reports
  enable row level security;

CREATE POLICY "Enable read access for all users" ON "public"."barometer_pressure_reports"
AS PERMISSIVE FOR SELECT
TO authenticated
USING (true)
